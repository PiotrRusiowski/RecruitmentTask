{"version":3,"sources":["webpack://zad/webpack/bootstrap","webpack://zad/webpack/runtime/make namespace object","webpack://zad/./main.js","webpack://zad/./styles/index.scss"],"names":[],"mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA,KAAK;AACL,GAAG;;;;;;;;;;;AC9CH","file":"bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const toggleBtns = document.querySelectorAll(\".togglePopupBtn\");\nconst sizesButtons = document.querySelectorAll(\".sizeBtn\");\nconst colorSelectOptions = document.querySelectorAll(\"option\");\nconst productPrice = document.querySelector(\".productPrice\");\nconst popup = document.querySelector(\".popup\");\n\nconst togglePopup = () => {\n  popup.classList.toggle(\"showPopup\");\n};\ntoggleBtns.forEach((btn) => btn.addEventListener(\"click\", togglePopup));\n\nfetch(\"./xbox.json\")\n  .then((res) => res.json())\n  .then((jsonData) => {\n    sizesButtons.forEach((sizeBtn, index) => {\n      const arrayOfSizes = Object.values(jsonData.sizes.items);\n\n      sizeBtn.innerText = arrayOfSizes[index].name;\n      productPrice.innerText = arrayOfSizes[0].price;\n      console.log(arrayOfSizes);\n\n      // arrayOfSizes.forEach((size) => {\n      //   sizeBtn.innerText = size.name;\n      // });\n    });\n\n    colorSelectOptions.forEach((option, index) => {\n      const arrayOfVariants = Object.values(jsonData.multiversions[0].items);\n      console.log(arrayOfVariants);\n\n      const arrayOfColors = arrayOfVariants.map((variant, index) =>\n        Object.values(variant.values)\n      );\n      console.log(arrayOfColors);\n\n      const formattedColors = arrayOfColors.map((color, index) => {\n        const newObj = { ...color[0] };\n        return newObj;\n      });\n\n      console.log(formattedColors);\n\n      option.innerText = formattedColors[index].name;\n\n      // option.innerText = arrayOfVariants[index].n\n    });\n  });\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}