{"version":3,"sources":["webpack://zad/webpack/bootstrap","webpack://zad/webpack/runtime/make namespace object","webpack://zad/./main.js","webpack://zad/./styles/index.scss"],"names":[],"mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,gCAAgC,sBAAsB;;AAEtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACvHA","file":"bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const toggleBtns = document.querySelectorAll(\".togglePopupBtn\");\nconst sizesButtons = document.querySelectorAll(\".btn--sizeBtn\");\nconst colorSelectOptions = document.querySelectorAll(\"option\");\nconst productPrice = document.querySelector(\".popup__title--price\");\nconst popup = document.querySelector(\".popup\");\nconst popupForm = document.querySelector(\".popup__form\");\nconst status = document.querySelector(\".productStatus\");\nconst slider = document.querySelector(\".slider__content\");\nconst sliderArrowLeft = document.querySelector(\".slider__arrow\");\nconst sliderArrowRight = document.querySelector(\".slider__arrow--right\");\nconst productName = document.querySelector(\".popup__title--name\");\nlet data;\nlet arrayOfSizes;\nlet cart = [];\n\nconst togglePopup = () => {\n  popup.classList.toggle(\"showPopup\");\n};\ntoggleBtns.forEach((btn) => btn.addEventListener(\"click\", togglePopup));\n\nconst isLocalStorageSupported = window.localStorage; //\n\nconst getData = () => {\n  fetch(\"./xbox.json\")\n    .then((res) => res.json())\n    .then((res) => (data = res))\n    .then(() => setData(data))\n    .then(() => localStorage.setItem(\"data\", JSON.stringify(data)));\n};\n\nconst setData = (data) => {\n  productName.innerText = data.product.name;\n  sizesButtons.forEach((sizeBtn, index) => {\n    arrayOfSizes = Object.values(data.sizes.items);\n\n    sizeBtn.value = arrayOfSizes[index].name;\n\n    status.innerText = arrayOfSizes[0].status;\n\n    sizeBtn.addEventListener(\"click\", () => changeRamOption(sizeBtn.value));\n    productPrice.innerText = `${arrayOfSizes[0].price} zł`;\n\n    colorSelectOptions.forEach((option, index) => {\n      const arrayOfVariants = Object.values(data.multiversions[0].items);\n\n      const arrayOfColors = arrayOfVariants.map((variant, index) =>\n        Object.values(variant.values)\n      );\n\n      const formattedColors = arrayOfColors.map((color, index) => {\n        const newObj = { ...color[0] };\n        return newObj;\n      });\n\n      option.innerText = formattedColors[index].name;\n      option.value = formattedColors[index].name;\n    });\n  });\n};\n\nconst changeRamOption = (typeOfRam) => {\n  arrayOfSizes.forEach((item) => {\n    if (item.name === typeOfRam) {\n      productPrice.innerText = `${item.price} zł`;\n      status.innerText = item.status;\n\n      sizesButtons.forEach((button) => {\n        if (button.name === typeOfRam) {\n          button.classList.add(\"btn--active\");\n        } else {\n          button.classList.remove(\"btn--active\");\n        }\n      });\n    }\n  });\n};\n\ntry {\n  const cachedData = localStorage.getItem(\"data\");\n  const data = JSON.parse(cachedData);\n\n  if (data) {\n    setData(data);\n  } else {\n    throw new Error(\"NO_CACHE\");\n  }\n} catch (e) {\n  getData();\n}\n\nconst handleFormSubmit = (e) => {\n  e.preventDefault();\n  // bez name za to z buttonami\n\n  const activeBtn = document.querySelector(\".btn--active\");\n\n  const productToAddToCart = {\n    name: productName.innerText,\n    typeOfRam: activeBtn.value,\n    color: e.target.colorSelect.value,\n  };\n\n  cart = [...cart, productToAddToCart];\n  alert(\"Product added to the cart!, Check console for details :) \");\n  console.log(cart);\n};\n\nconst onNextClick = () => {\n  const imgWidth = slider.offsetWidth;\n  slider.scrollLeft += imgWidth;\n};\n\nconst onPreviousClick = () => {\n  const imgWidth = slider.offsetWidth;\n  slider.scrollLeft -= imgWidth;\n};\n\nsliderArrowLeft.addEventListener(\"click\", onNextClick);\nsliderArrowRight.addEventListener(\"click\", onPreviousClick);\npopupForm.addEventListener(\"submit\", handleFormSubmit);\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}